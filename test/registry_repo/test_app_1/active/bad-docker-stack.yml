version: '3.7'

# bump it!
# Declare all services this deployment contains.
services:

  # Name of the service. Should be something descriptive.
  web:
    # What image to deploy.
    # Images from KTHs own registry should start with "kthregistryv2.sys.kth.se/"
    # "kth-azure-app" is the name of the application and the version after the ":"
    # is what version of the image to use. This could either be a static version
    # (as shown in the commented line below) or a semver based version.
    # To use a semver based versioning exchange the static version number with
    # an environment variable on the format ${[SERVICENAME]_VERSION} as shown below.
    image: kthregistryv2.sys.kth.se/kth-azure-app:${WEB_VERSION}
    # image: kthregistryv2.sys.kth.se/kth-azure-app:2.4.123_2b42b2c

    # Define the environment for the service. This is the place to put all
    # non-secret environment variables that you want to have defined differenly
    # for each cluster.
    environment:
      # This is where we set the image version variable to use a semver based version.
      # The version this points to is the version set in each applications docker.conf file.
      # The supported formats for semver are "~major.minor.not_used" and "^major.minor.not_used"
      # A starting ~Â declares that each new build of the given major and minor versions should be
      # deployed. As long as the major and minor versions stay the same (here 2 and 4) each
      # build by jenkins will be deployed.
      # A starting ^ declares that we want to deploy all builds as long as the major version
      # doesn't change. So even if we change our applications docker.conf from 2.4 to 2.5
      # the application will still get automatically deployed.
      WEB_VERSION: "~2.9.0"
      NON_SECRET_SETTING: "This only exists for this service and this cluster"
      
    # The env_file points to an environment file to use for additional environment settings.
    # This should point to this application and cluster in cellus-registry.
    # The easiest way to do this is to copy the below line and replace application and cluster.
    # The secrets.decrypted.env is a file that get's created at runtime by cellus and is the
    # decrypted version of the secrets.env that should exist in the same directory as this
    # docker-stack.yml file.
    env_file:
      - secrets.decrypted.env
    # What ports does the application expose?
    ports:
      - 3000
    # Labels used for drill down in OMS
    # cluser="active" sets dockerinfo_labels_cluster_s:"active" i OMS
    volumes:
      - type: bind
        source: /source/path
        target: /target/path
      - ./relative/source:/relative/target

    labels:
      - se.kth.slackChannels="#team-pipeline-build,#pipeline-logs"
      #
      # Is this application important for any form of operations, or support to act upon.
      # values: low, medium, high.
      # 
      # i.e: - se.kth.importance="high"
      #
      - se.kth.importance="low"

      # BAD LABEL!
      - se.kth.monitorPattern="ENV_TEST: active"
      
      
    # Dependencies to other services in this docker-stack.yml is declared here. Use the name
    # of the service as the id of the dependency.
    depends_on:
     - redis
    # This section is new to version 3 of the file format and specifies information regarding
    # how the deployment of the service should be done.
    deploy:
      # How many replicas should be running of this service?
      replicas: 2

      # Take down one container at a time. 
      update_config:
        parallelism: 1
        
      # Decided what policy to enforce when restarting the container
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 2

      placement:
        constraints:
          - node.role == worker

      # Decides the reserverd and limitations of cpu and memory usage
      resources:
        limits:
          cpus: '0.2'
          memory: 300M
        reservations:
          cpus: '0.05'
          memory: 50M
    # Limit the logging stored on the worker vm:s. All logs are found in OMS.
    logging:
      options:
        max-size: "10m"
        max-file: "5"

    # Declares which docker provided networks that this service should use.
    # See the description of the different networks and how they are used at the
    # end of this file.
    networks:
      # Default should always be set
      - default
      # Use proxy if you want this service to be published
      - proxy

  redis:
    image: redis:3.2.6-alpine
    logging:
      options:
        max-size: "10m"
        max-file: "5"
    labels:
      - se.kth.slackChannels="#ita-ops"
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == worker
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 2
      resources:
        limits:
          cpus: '0.2'
          memory: 300M
        reservations:
          cpus: '0.05'
          memory: 50M
    ports:
      - 6379
    networks:
      - default

# This section should always exist in this file. It describes which
# networks are accessible to the services declared in the file.
networks:
  # The default network is an internal network used for communication between
  # the different services. This provides DNS entries for each service that
  # in the kth-azure-app example makes the "web" service able to connect
  # to the "redis" service by using the hostname "redis"
  default:
    external: false
  # The proxy network is an external network (created outside the scope of
  # this docker-stack.yml file). The network is created by docker flow proxy
  # which uses it as the network from which to publish services that are
  # declared to be published (see the "deploy" -> "labels" section above).
  proxy:
    external: true

